/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, EBook as PrismaEBook } from "@prisma/client";

export class EBookServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.EBookCountArgs, "select">): Promise<number> {
    return this.prisma.eBook.count(args);
  }

  async eBooks(args: Prisma.EBookFindManyArgs): Promise<PrismaEBook[]> {
    return this.prisma.eBook.findMany(args);
  }
  async eBook(args: Prisma.EBookFindUniqueArgs): Promise<PrismaEBook | null> {
    return this.prisma.eBook.findUnique(args);
  }
  async createEBook(args: Prisma.EBookCreateArgs): Promise<PrismaEBook> {
    return this.prisma.eBook.create(args);
  }
  async updateEBook(args: Prisma.EBookUpdateArgs): Promise<PrismaEBook> {
    return this.prisma.eBook.update(args);
  }
  async deleteEBook(args: Prisma.EBookDeleteArgs): Promise<PrismaEBook> {
    return this.prisma.eBook.delete(args);
  }
}
