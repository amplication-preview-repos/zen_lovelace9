/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, YouTubeVideo as PrismaYouTubeVideo } from "@prisma/client";

export class YouTubeVideoServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.YouTubeVideoCountArgs, "select">
  ): Promise<number> {
    return this.prisma.youTubeVideo.count(args);
  }

  async youTubeVideos(
    args: Prisma.YouTubeVideoFindManyArgs
  ): Promise<PrismaYouTubeVideo[]> {
    return this.prisma.youTubeVideo.findMany(args);
  }
  async youTubeVideo(
    args: Prisma.YouTubeVideoFindUniqueArgs
  ): Promise<PrismaYouTubeVideo | null> {
    return this.prisma.youTubeVideo.findUnique(args);
  }
  async createYouTubeVideo(
    args: Prisma.YouTubeVideoCreateArgs
  ): Promise<PrismaYouTubeVideo> {
    return this.prisma.youTubeVideo.create(args);
  }
  async updateYouTubeVideo(
    args: Prisma.YouTubeVideoUpdateArgs
  ): Promise<PrismaYouTubeVideo> {
    return this.prisma.youTubeVideo.update(args);
  }
  async deleteYouTubeVideo(
    args: Prisma.YouTubeVideoDeleteArgs
  ): Promise<PrismaYouTubeVideo> {
    return this.prisma.youTubeVideo.delete(args);
  }
}
